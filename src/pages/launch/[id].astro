---
import { type APISResponse } from "../../types/api";
import Layout from "../../layouts/Layout.astro";
import getLatestResponse from "../../services/query";

const { id } = Astro.params;

let isOdd;
if (id) {
  isOdd = parseInt(id) % 2 === 0;
}

const query = await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`);
const info = await query.json();

export async function getStaticPaths() {
  const data = await getLatestResponse();

  return data.map((info: APISResponse) => ({ params: { id: info.id } }));
}
---

<Layout title=`card-${id}`>
  <article
    class="transition text-pretty flex flex-col min-w-fit gap-4 p-6 mx-8 my-4 bg-white border border-gray-200 rounded-md shadow dark:bg-gray-900 dark:border-gray-700"
  >
    <h2
      class="mb-2 text-sm flex flex-row justify-between font-bold tracking-tight text-gray-900 dark:text-white/50"
    >
      <span>ID de Usuario:{info.userId}</span>
      <span
        class:list={{
          "text-green-300/70": isOdd,
          "text-red-300/70": !isOdd,
        }}>ID:{id}</span
      >
    </h2>
    <h5
      class="mb-2 text-4xl font-bold tracking-tight text-gray-900 dark:text-white"
    >
      {info.title}
    </h5>
    <p
      class="flex font-normal justify-self-end text-gray-700 dark:text-gray-400"
    >
      {info.body}
    </p>
  </article>
</Layout>
